---
# file: roles/bloomapi/tasks/main.yml

# Setup Dependencies
- name: be sure nodejs apt repository exists
  apt_repository: repo=ppa:chris-lea/node.js
  sudo: yes
- name: be sure to install node, all node dependencies, p7zip, and pdftotext
  apt: update_cache=yes state=present pkg={{ item }}
  with_items:
    - python-software-properties
    - python
    - g++
    - make
    - nodejs
    - p7zip-full
    - poppler-utils
    - nginx
  sudo: yes

- name: be sure website source is checked out
  git: repo=git://github.com/untoldone/bloomapi.git dest=/home/ubuntu/bloomapi version={{branch}}
  notify:
    - restart bloomapi

- name: be sure nginx is configured
  copy: src=nginx.conf dest=/etc/nginx/nginx.conf owner=root group=root mode=644
  notify:
    - restart nginx
  sudo: yes
- name: be sure nginx default site is configured
  template: src=nginx_default_site dest=/etc/nginx/sites-available/default
  notify:
    - restart nginx
  sudo: yes

# Install BloomAPI Dependencies
- name: be sure BloomAPI Nodejs dependencies are installed
  npm: path=/home/ubuntu/bloomapi

# Create init script for BloomAPI
- name: be sure bloomapi init script exists
  copy: src=bloomapi-init dest=/etc/init.d/bloomapi owner=root group=root mode=755
  notify: restart bloomapi
  sudo: yes
- name: be sure bloomapi init script has proper runlevels
  shell: creates=/etc/rc5.d/S20bloomapi update-rc.d bloomapi defaults
  sudo: yes

# Create BloomAPI configuration
- name: be sure that blooomapi's config.js is installed
  template: src=bloom-config dest=/home/ubuntu/bloomapi/config.js owner=ubuntu group=ubuntu mode=644

# Create BloomAPI Database
- name: be sure bloomapi database exists
  postgresql_db: db=bloomapi login_user=postgres login_password={{ postgres_password }} owner=postgres state=present
  register: result

# Bootstrap BloomAPI
- name: be sure bloomapi has been bootstrapped
  shell: chdir=/home/ubuntu/bloomapi node make bootstrap
  when_changed: $result

# Add cron task to update data sources
- name: be sure bloomapi data source update cron task exists
  cron: name="Update Bloomapi" minute="0" hour="1" job="cd /home/ubuntu/bloomapi && node make fetch"

# Ensure bloomapi and nginx are running
- name: be sure bloomapi is running
  service: name=bloomapi state=started
  sudo: yes
- name: be sure nginx is running
  service: name=nginx state=started
  sudo: yes
